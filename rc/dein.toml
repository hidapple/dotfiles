[[plugins]]
repo = 'Shougo/dein.vim'

[[plugins]]
repo = 'tyru/caw.vim.git'
hook_add = '''
  nmap <C-_> <Plug>(caw:i:toggle)
  vmap <C-_> <Plug>(caw:i:toggle)
'''

[[plugins]]
repo = 'surround.vim'

[[plugins]]
repo = 'tpope/vim-endwise'

[[plugins]]
repo = 'Shougo/unite.vim'

[[plugins]]
repo = 'Shougo/neomru.vim'
hook_add = '''
  nnoremap <silent> ,ub :<C-u>Unite buffer<CR>
  nnoremap <silent> ,uf :<C-u>UniteWithBufferDir -buffer-name=files file<CR>
  nnoremap <silent> ,ur :<C-u>Unite -buffer-name=register register<CR>
  nnoremap <silent> ,um :<C-u>Unite file_mru<CR>
'''

[[plugins]]
repo = 'tpope/vim-rails'

[[plugins]]
repo = 'thinca/vim-quickrun'
hook_add = '''
  let g:quickrun_config = {
\   '_' : {
\     'outputter/buffer/close_on_empty' : 1
\   }
\ }
'''

[[plugins]]
repo = 'Shougo/neosnippet'

[[plugins]]
repo = 'Shougo/neosnippet-snippets'
add_hook = '''
  " Plugin key-mappings.
  imap <C-k>     <Plug>(neosnippet_expand_or_jump)
  smap <C-k>     <Plug>(neosnippet_expand_or_jump)
  xmap <C-k>     <Plug>(neosnippet_expand_target)
  " SuperTab like snippets behavior.
  imap <expr><TAB> neosnippet#expandable_or_jumpable() ? "\<Plug>(neosnippet_expand_or_jump)" : pumvisible() ? "\<C-n>" : "\<TAB>"
  smap <expr><TAB> neosnippet#expandable_or_jumpable() ? "\<Plug>(neosnippet_expand_or_jump)" : "\<TAB>"
'''

[[plugins]]
repo = 'Shougo/neocomplete.vim'
hook_add = '''
  let g:neocomplete#enable_at_startup = 1
  let g:neocomplete#enable_ignore_case = 1
  let g:neocomplete#enable_smart_case = 1
  if !exists('g:neocomplete#keyword_patterns')
    let g:neocomplete#keyword_patterns = {}
  endif
  let g:neocomplete#keyword_patterns._ = '\h\w*'
  inoremap <expr><TAB>   pumvisible() ? "\<C-n>" : "\<TAB>"
  inoremap <expr><S-TAB> pumvisible() ? "\<C-p>" : "\<S-TAB>"
'''

[[plugins]]
repo =  'mattn/emmet-vim'
hook_add = '''
  let g:user_emmet_leader_key='<C-e>'
  let g:user_emmet_settings={ 'lang' : 'ja' }
'''

[[plugins]]
repo = 'cespare/vim-toml'
on_ft = 'toml'

[[plugins]]
repo = 'StanAngeloff/php.vim'
 
[[plugins]]
repo = 'vim-ruby/vim-ruby'

[[plugins]]
repo = 'othree/html5.vim'

[[plugins]]
repo = 'plasticboy/vim-markdown'
hook_add = '''
  let g:vim_markdown_folding_disabled=1
'''

[[plugins]]
repo = 'naberon/vim-cakehtml'
hook_add = '''
  autocmd BufNewFile,BufRead *.ctp set filetype=htmlcake
'''

[[plugins]]
repo = 'kchmck/vim-coffee-script'

[[plugins]]
repo = 'mattn/webapi-vim'

[[plugins]]
repo = 'kannokanno/previm'

[[plugins]]
repo = 'tyru/open-browser.vim'
hook_add = '''
  let g:netrw_nogx = 1
  nmap gx <Plug>(openbrowser-smart-search)
  vmap gx <Plug>(openbrowser-smart-search)
'''

